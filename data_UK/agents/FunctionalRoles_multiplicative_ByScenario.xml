<functionalRoles>
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="AF" serialID="0"
		givingUpMean="${@(agents/%s/%v/AftParams_AF.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_AF.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_AF.csv, givingUpProb)}">
		<alternativeFr>Arable</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_AF.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_AF.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_AF.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_AF.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_AF.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_AF.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_AF.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
		 
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="Bioenergy" serialID="1"
		givingUpMean="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_Bioenergy.csv, givingUpProb)}">
		<alternativeFr>Bioenergy</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_Bioenergy.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_Bioenergy.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_Bioenergy.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_Bioenergy.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
		 
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="EA" serialID="2"
		givingUpMean="${@(agents/%s/%v/AftParams_EA.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_EA.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_EA.csv, givingUpProb)}">
		<alternativeFr>Ext_Agriculture</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_EA.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_EA.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_EA.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_EA.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_EA.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_EA.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_EA.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	 
	
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="EP" serialID="3"
		givingUpMean="${@(agents/%s/%v/AftParams_EP.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_EP.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_EP.csv, givingUpProb)}">
		<alternativeFr>Ext_Pastoral</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_EP.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_EP.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_EP.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_EP.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_EP.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_EP.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_EP.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="IAfodder" serialID="4"
		givingUpMean="${@(agents/%s/%v/AftParams_IAfodder.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_IAfodder.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_IAfodder.csv, givingUpProb)}">
		<alternativeFr>IAfodder</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IAfodder.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IAfodder.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IAfodder.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IAfodder.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_IAfodder.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_IAfodder.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_IAfodder.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="IAfood" serialID="5"
		givingUpMean="${@(agents/%s/%v/AftParams_IAfood.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_IAfood.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_IAfood.csv, givingUpProb)}">
		<alternativeFr>IAfood</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IAfood.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IAfood.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IAfood.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IAfood.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_IAfood.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_IAfood.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_IAfood.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="IP" serialID="6"
		givingUpMean="${@(agents/%s/%v/AftParams_IP.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_IP.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_IP.csv, givingUpProb)}">
		<alternativeFr>Int_Pastoral</alternativeFr>NW

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IP.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IP.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_IP.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_IP.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_IP.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_IP.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_IP.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="MW" serialID="7"
		givingUpMean="${@(agents/%s/%v/AftParams_MW.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_MW.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_MW.csv, givingUpProb)}">
		<alternativeFr>Mixed woodland</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_MW.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_MW.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_MW.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_MW.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_MW.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_MW.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_MW.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="NWCons" serialID="8"
		givingUpMean="${@(agents/%s/%v/AftParams_NWCons.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_NWCons.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_NWCons.csv, givingUpProb)}">
		<alternativeFr>NWCons</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_NWCons.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_NWCons.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_NWCons.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_NWCons.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_NWCons.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_NWCons.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_NWCons.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="PNB" serialID="9"
		givingUpMean="${@(agents/%s/%v/AftParams_PNB.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_PNB.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_PNB.csv, givingUpProb)}">
		<alternativeFr>Productive N Broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNB.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNB.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNB.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNB.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_PNB.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_PNB.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_PNB.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="PNC" serialID="10"
		givingUpMean="${@(agents/%s/%v/AftParams_PNC.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_PNC.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_PNC.csv, givingUpProb)}">
		<alternativeFr>Productive N Conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNC.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNC.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNC.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNC.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_PNC.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_PNC.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_PNC.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="PNNB" serialID="11"
		givingUpMean="${@(agents/%s/%v/AftParams_PNNB.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_PNNB.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_PNNB.csv, givingUpProb)}">
		<alternativeFr>Productive NN Broadleaf</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNNB.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNNB.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNNB.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNNB.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_PNNB.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_PNNB.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_PNNB.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="PNNC" serialID="12"
		givingUpMean="${@(agents/%s/%v/AftParams_PNNC.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_PNNC.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_PNNC.csv, givingUpProb)}">
		<alternativeFr>Productive NN Conifer</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNNC.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNNC.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_PNNC.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_PNNC.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_PNNC.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_PNNC.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_PNNC.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="SusAr" serialID="13"
		givingUpMean="${@(agents/%s/%v/AftParams_SusAr.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_SusAr.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_SusAr.csv, givingUpProb)}">
		<alternativeFr>SusAr</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_SusAr.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_SusAr.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_SusAr.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_SusAr.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_SusAr.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_SusAr.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_SusAr.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="VEP" serialID="14"
		givingUpMean="${@(agents/%s/%v/AftParams_VEP.csv, givingUpDistributionMean)}"
		givingInMean="${@(agents/%s/%v/AftParams_VEP.csv, givingInDistributionMean)}"
		givingUpProbability = "${@(agents/%s/%v/AftParams_VEP.csv, givingUpProb)}">
		<alternativeFr>V_Ext_Pastoral</alternativeFr>

 		<givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_VEP.csv, givingUpDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_VEP.csv, givingUpDistributionSD)}"/>
 		
 		<givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
 			mean="${@(agents/%s/%v/AftParams_VEP.csv, givingInDistributionMean)}" 
 			sd="${@(agents/%s/%v/AftParams_VEP.csv, givingInDistributionSD)}"/>
 		
 		<serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
 			min="${@(agents/%s/%v/AftParams_VEP.csv, serviceLevelNoiseMin)}" 
 			max="${@(agents/%s/%v/AftParams_VEP.csv, serviceLevelNoiseMax)}"/>
 		
		<production class="org.volante.abm.example.SimpleProductionModel"
			csvFile="${@(agents/%s/%v/AftParams_VEP.csv, productionCsvFile)}" multiplyProductionNoise="true" />
	</fRole>
	
	
	 		 
	<fRole class="org.volante.abm.comi.fr.ComiVariantProductionFR" label="Urban" serialID="15"
	givingUpMean="${@(agents/%s/%v/AftParams_Urban.csv, givingUpDistributionMean)}"
	givingInMean="${@(agents/%s/%v/AftParams_Urban.csv, givingInDistributionMean)}"
	givingUpProbability = "${@(agents/%s/%v/AftParams_Urban.csv, givingUpProb)}">
	<alternativeFr>Urban</alternativeFr>

	 <givingUpDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
		 mean="${@(agents/%s/%v/AftParams_Urban.csv, givingUpDistributionMean)}" 
		 sd="${@(agents/%s/%v/AftParams_Urban.csv, givingUpDistributionSD)}"/>
	 
	 <givingInDistribution class="com.moseph.modelutils.distribution.NormalDistribution" 
		 mean="${@(agents/%s/%v/AftParams_Urban.csv, givingInDistributionMean)}" 
		 sd="${@(agents/%s/%v/AftParams_Urban.csv, givingInDistributionSD)}"/>
	 
	 <serviceLevelNoise class="com.moseph.modelutils.distribution.UniformDistribution" 
		 min="${@(agents/%s/%v/AftParams_Urban.csv, serviceLevelNoiseMin)}" 
		 max="${@(agents/%s/%v/AftParams_Urban.csv, serviceLevelNoiseMax)}"/>
	 
	<production class="org.volante.abm.example.SimpleProductionModel"
		csvFile="${@(agents/%s/%v/AftParams_Urban.csv, productionCsvFile)}" multiplyProductionNoise="true" />
</fRole>

	 

</functionalRoles>